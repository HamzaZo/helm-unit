# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Build helm-unit release

on:
  pull_request:
  push:
    branches:
      - master

jobs:
  build:

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        python-version: [3.7]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Build asset release for ubuntu
      if: matrix.os == 'ubuntu-latest'
      run: |
        python setup.py build
        tar -C build/exe.linux-x86_64-3.7 -cvf helm-unit_0.1.3_Linux_x86_64.tar.gz .

    - name: Build asset release for macox
      if: matrix.os == 'macos-latest'
      run: |
        python setup.py build
        tar -C build/exe.macosx-10.13-x86_64-3.7 -cvf helm-unit_0.1.3_Darwin_x86_64.tar.gz .

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: true
        prerelease: true
    - name: Upload Release Asset
      if: matrix.os == 'ubuntu-latest'
      id: upload-release-asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./helm-unit_0.1.3_Linux_x86_64.tar.gz
        asset_name: helm-unit_0.1.3_Linux_x86_64.tar.gz
        asset_content_type: application/zip

